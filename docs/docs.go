// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "APP Support",
            "email": "app_support@norainc.org"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "either logs a user in or creates an account depending on previous use of the application",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "no-cache",
                    "auth"
                ],
                "summary": "login user",
                "operationId": "login-user",
                "parameters": [
                    {
                        "description": "user's account information",
                        "name": "login-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "201": {
                        "description": "Created"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "logs a user out and clears all server side cookies associated with their session",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "no-cache",
                    "auth"
                ],
                "summary": "logout user",
                "operationId": "logout-user",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/check": {
            "put": {
                "description": "allows a logged in user to edit their pending or reject check requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "check",
                    "no-cache"
                ],
                "summary": "edit check request",
                "operationId": "edit-check",
                "parameters": [
                    {
                        "description": "check request information to update",
                        "name": "check-request-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EditCheckInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "creates a check request for a logged in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "check",
                    "no-cache"
                ],
                "summary": "add check request",
                "operationId": "add-check",
                "parameters": [
                    {
                        "description": "new check request information",
                        "name": "check-request-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CheckRequestInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "allows a logged in user to delete and removes one of their check requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "check",
                    "no-cache"
                ],
                "summary": "delete check request",
                "operationId": "delete-check",
                "parameters": [
                    {
                        "description": "check request id to delete",
                        "name": "check-request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FindCheckInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/check/approve": {
            "post": {
                "description": "allows an administrative user to approve a specific check request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "check",
                    "no-cache",
                    "admin"
                ],
                "summary": "approve check request",
                "operationId": "approve-check",
                "parameters": [
                    {
                        "description": "check request id to approve",
                        "name": "request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApproveRejectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/check/detail": {
            "get": {
                "description": "generates detailed information for a specific check request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "check"
                ],
                "summary": "check request detail",
                "operationId": "check-detail",
                "parameters": [
                    {
                        "description": "check request id to find",
                        "name": "check-request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FindCheckInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/check/monthly": {
            "get": {
                "description": "creates a monthly check report for the entire organization for a given month and year",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "check",
                    "reports",
                    "admin"
                ],
                "summary": "monthly check request report",
                "operationId": "monthly-check",
                "parameters": [
                    {
                        "description": "month and year for report on organization wide check requests",
                        "name": "month-year-input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MonthlyRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/check/reject": {
            "post": {
                "description": "allows a logged in administrative user to reject a check request until further edits have been made",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "check",
                    "no-cache",
                    "admin"
                ],
                "summary": "reject check request",
                "operationId": "reject-check",
                "parameters": [
                    {
                        "description": "check request id to reject",
                        "name": "request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApproveRejectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/error": {
            "post": {
                "description": "logs client side errors to allow for faster issue remediation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "errors"
                ],
                "summary": "logs errors",
                "operationId": "log-error",
                "parameters": [
                    {
                        "description": "error log information",
                        "name": "error-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ErrorLog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/grants": {
            "get": {
                "description": "generates basic information for all organization-wide grants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grants"
                ],
                "summary": "all grant information",
                "operationId": "get-grants",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/grants/check": {
            "get": {
                "description": "generates an overview of check requests for a specified grant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grants",
                    "check",
                    "reports",
                    "admin"
                ],
                "summary": "one grant's check requests",
                "operationId": "get-grant-check",
                "parameters": [
                    {
                        "description": "grant id for which check request report should be run",
                        "name": "grant-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Grant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/grants/detail": {
            "get": {
                "description": "generates basic information for a specified grant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grants"
                ],
                "summary": "one grant information",
                "operationId": "get-grant",
                "parameters": [
                    {
                        "description": "grant id",
                        "name": "grant-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Grant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/grants/mileage": {
            "get": {
                "description": "generates an overview of mileage requests for a specified grant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grants",
                    "mileage",
                    "reports",
                    "admin"
                ],
                "summary": "one grant's mileage requests",
                "operationId": "get-grant-mileage",
                "parameters": [
                    {
                        "description": "grant id for which mileage request report should be run",
                        "name": "grant-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Grant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/grants/petty_cash": {
            "get": {
                "description": "generates an overview of petty cash requests for a specified grant",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "grants",
                    "petty cash",
                    "reports",
                    "admin"
                ],
                "summary": "one grant's petty cash requests",
                "operationId": "get-grant-petty_cash",
                "parameters": [
                    {
                        "description": "grant id for which petty cash request report should be run",
                        "name": "grant-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Grant"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/me": {
            "get": {
                "description": "gathers basic request information for a logged in user and the requests' current status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "reports"
                ],
                "summary": "get my info",
                "operationId": "get-me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.MyInfoRes"
                        }
                    }
                }
            }
        },
        "/me/check": {
            "get": {
                "description": "gathers more detailed request information for a logged in user's check requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "check",
                    "reports"
                ],
                "summary": "get my check reqs",
                "operationId": "get-my-checks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.CheckRequestRes"
                        }
                    }
                }
            }
        },
        "/me/mileage": {
            "get": {
                "description": "gathers more detailed request information for a logged in user's mileage requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "mileage",
                    "reports"
                ],
                "summary": "get my mileage reqs",
                "operationId": "get-my-mileage",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.MileageRes"
                        }
                    }
                }
            }
        },
        "/me/petty_cash": {
            "get": {
                "description": "gathers more detailed request information for a logged in user's petty cash requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "petty cash",
                    "reports"
                ],
                "summary": "get my petty cash reqs",
                "operationId": "get-my-petty-cash",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.PettyCashRes"
                        }
                    }
                }
            }
        },
        "/me/vehicle": {
            "put": {
                "description": "edits information about a specific vehicle for a logged in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "no-cache"
                ],
                "summary": "edit a vehicle",
                "operationId": "edit-vehicle",
                "parameters": [
                    {
                        "description": "edited vehicle information",
                        "name": "vehicle-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Vehicle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.VehicleRes"
                        }
                    }
                }
            },
            "post": {
                "description": "adds vehicle information to a logged in user's account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "no-cache"
                ],
                "summary": "add a vehicle",
                "operationId": "add-vehicle",
                "parameters": [
                    {
                        "description": "user's vehicle information",
                        "name": "vehicle-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.VehicleInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.VehicleRes"
                        }
                    }
                }
            },
            "delete": {
                "description": "removes vehicle information from a logged in user's account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "no-cache"
                ],
                "summary": "remove a vehicle",
                "operationId": "remove-vehicle",
                "parameters": [
                    {
                        "description": "deleted vehicle information",
                        "name": "vehicle-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Vehicle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.VehicleRes"
                        }
                    }
                }
            }
        },
        "/mileage": {
            "put": {
                "description": "allows a logged in user to edit their pending or reject mileage requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mileage",
                    "no-cache"
                ],
                "summary": "edit mileage request",
                "operationId": "edit-mileage",
                "parameters": [
                    {
                        "description": "mileage request information to update",
                        "name": "mileage-request-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EditMileageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "creates a mileage request for a logged in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mileage",
                    "no-cache"
                ],
                "summary": "add mileage request",
                "operationId": "add-mileage",
                "parameters": [
                    {
                        "description": "new mileage request information",
                        "name": "mileage-request-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MileageInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "allows a logged in user to delete and removes one of their mileage requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mileage",
                    "no-cache"
                ],
                "summary": "delete mileage request",
                "operationId": "delete-mileage",
                "parameters": [
                    {
                        "description": "mileage request id to delete",
                        "name": "mileage-request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FindMileageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/mileage/approve": {
            "post": {
                "description": "allows an administrative user to approve a specific mileage request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mileage",
                    "no-cache",
                    "admin"
                ],
                "summary": "approve mileage request",
                "operationId": "approve-mileage",
                "parameters": [
                    {
                        "description": "mileage request id to approve",
                        "name": "request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApproveRejectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/mileage/detail": {
            "get": {
                "description": "generates detailed information for a specific mileage request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mileage"
                ],
                "summary": "mileage request detail",
                "operationId": "mileage-detail",
                "parameters": [
                    {
                        "description": "mileage request id to find",
                        "name": "mileage-request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FindMileageInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/mileage/monthly": {
            "get": {
                "description": "creates a monthly mileage report for the entire organization for a given month and year",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mileage",
                    "reports",
                    "admin"
                ],
                "summary": "monthly mileage report",
                "operationId": "monthly-mileage",
                "parameters": [
                    {
                        "description": "month and year for report on organization wide mileage requests",
                        "name": "month-year-input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MonthlyRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/mileage/reject": {
            "post": {
                "description": "allows a logged in administrative user to reject a mileage request until further edits have been made",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "mileage",
                    "no-cache",
                    "admin"
                ],
                "summary": "reject mileage request",
                "operationId": "reject-mileage",
                "parameters": [
                    {
                        "description": "mileage request id to reject",
                        "name": "request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApproveRejectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/petty_cash": {
            "put": {
                "description": "allows a logged in user to edit their pending or reject petty cash requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "petty cash",
                    "no-cache"
                ],
                "summary": "edit petty cash request",
                "operationId": "edit-petty_cash",
                "parameters": [
                    {
                        "description": "petty cash request information to update",
                        "name": "petty-cash-request-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EditPettyCash"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "creates a petty cash request for a logged in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "petty cash",
                    "no-cache"
                ],
                "summary": "add petty cash request",
                "operationId": "add-petty_cash",
                "parameters": [
                    {
                        "description": "new petty cash request information",
                        "name": "petty-cash-request-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PettyCashInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "allows a logged in user to delete and removes one of their petty cash requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "petty cash",
                    "no-cache"
                ],
                "summary": "delete petty cash request",
                "operationId": "delete-petty_cash",
                "parameters": [
                    {
                        "description": "petty cash request id to delete",
                        "name": "petty-cash-request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FindPettyCashInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/petty_cash/approve": {
            "post": {
                "description": "allows an administrative user to approve a specific petty cash request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "petty cash",
                    "no-cache",
                    "admin"
                ],
                "summary": "approve petty cash request",
                "operationId": "approve-petty_cash",
                "parameters": [
                    {
                        "description": "petty cash request id to approve",
                        "name": "request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApproveRejectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/petty_cash/detail": {
            "get": {
                "description": "generates detailed information for a specific petty cash request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "petty cash"
                ],
                "summary": "petty cash request detail",
                "operationId": "petty_cash-detail",
                "parameters": [
                    {
                        "description": "petty cash request id to find",
                        "name": "petty-cash-request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FindPettyCashInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/petty_cash/monthly": {
            "get": {
                "description": "creates a monthly petty cash report for the entire organization for a given month and year",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "petty cash",
                    "reports",
                    "admin"
                ],
                "summary": "monthly petty cash request report",
                "operationId": "monthly-petty_cash",
                "parameters": [
                    {
                        "description": "month and year for report on organization wide petty cash requests",
                        "name": "month-year-input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MonthlyRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/petty_cash/reject": {
            "post": {
                "description": "allows a logged in administrative user to reject a petty cash request until further edits have been made",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "petty cash",
                    "no-cache",
                    "admin"
                ],
                "summary": "reject petty cash request",
                "operationId": "reject-petty_cash",
                "parameters": [
                    {
                        "description": "petty cash request id to reject",
                        "name": "request-id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ApproveRejectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/seeds": {
            "post": {
                "description": "loads seed data for testing data and development purposes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "setup",
                    "no-cache"
                ],
                "summary": "initial seed data",
                "operationId": "seed-data",
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "removes seed data used for testing and development purposes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "setup",
                    "no-cache"
                ],
                "summary": "deletes seed data",
                "operationId": "delete-seed-data",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "gathers basic request information for all users in the system and the current status of their requests'",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "reports",
                    "admin"
                ],
                "summary": "get all users",
                "operationId": "get-users",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/check": {
            "get": {
                "description": "gathers more detailed information on a specific user's check requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "reports",
                    "check",
                    "admin"
                ],
                "summary": "user check requests",
                "operationId": "user-check",
                "parameters": [
                    {
                        "description": "specific user's id information",
                        "name": "user-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserIDBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/deactivate": {
            "delete": {
                "description": "deactivates a user's account and all of their associated requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "no-cache",
                    "admin"
                ],
                "summary": "deactivates a user",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "description": "specific user's id information",
                        "name": "user-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserIDBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/detail": {
            "get": {
                "description": "gathers basic request information for a specific user in the system and the current status of their requests'",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "reports",
                    "admin"
                ],
                "summary": "gets one user",
                "operationId": "get-user",
                "parameters": [
                    {
                        "description": "specific user's id information",
                        "name": "user-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserIDBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/mileage": {
            "get": {
                "description": "gathers more detailed information on a specific user's mileage requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "reports",
                    "mileage",
                    "admin"
                ],
                "summary": "user mileage",
                "operationId": "user-mileage",
                "parameters": [
                    {
                        "description": "specific user's id information",
                        "name": "user-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserIDBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user/petty_cash": {
            "get": {
                "description": "gathers more detailed information on a specific user's petty cash requests",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user",
                    "reports",
                    "petty cash",
                    "admin"
                ],
                "summary": "user petty cash",
                "operationId": "user-petty_cash",
                "parameters": [
                    {
                        "description": "specific user's id information",
                        "name": "user-info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.UserIDBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.UserIDBody": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Action": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "models.ApproveRejectRequest": {
            "type": "object",
            "required": [
                "request_id"
            ],
            "properties": {
                "request_id": {
                    "type": "string"
                }
            }
        },
        "models.Category": {
            "type": "string",
            "enum": [
                "IOP",
                "INTAKE",
                "PEERS",
                "ACT_TEAM",
                "IHBT",
                "PERKINS",
                "MENS_HOUSE",
                "NEXT_STEP",
                "LORAIN",
                "PREVENTION",
                "ADMINISTRATIVE",
                "FINANCE"
            ],
            "x-enum-varnames": [
                "IOP",
                "INTAKE",
                "PEERS",
                "ACT_TEAM",
                "IHBT",
                "PERKINS",
                "MENS_HOUSE",
                "NEXT_STEP",
                "LORAIN",
                "PREVENTION",
                "ADMINISTRATIVE",
                "FINANCE"
            ]
        },
        "models.CheckRequestInput": {
            "type": "object",
            "required": [
                "category",
                "credit_card",
                "date",
                "description",
                "grant_id",
                "purchases",
                "receipts",
                "vendor"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "credit_card": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "grant_id": {
                    "type": "string"
                },
                "purchases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Purchase"
                    }
                },
                "receipts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "vendor": {
                    "$ref": "#/definitions/models.Vendor"
                }
            }
        },
        "models.Check_Request": {
            "type": "object",
            "properties": {
                "action_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Action"
                    }
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "created_at": {
                    "type": "string"
                },
                "credit_card": {
                    "type": "string"
                },
                "current_status": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "grant_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_user_before_reject": {
                    "type": "string"
                },
                "order_total": {
                    "type": "number"
                },
                "purchases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Purchase"
                    }
                },
                "receipts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                },
                "vendor": {
                    "$ref": "#/definitions/models.Vendor"
                }
            }
        },
        "models.Check_Request_Overview": {
            "type": "object",
            "properties": {
                "current_status": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "order_total": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.EditCheckInput": {
            "type": "object",
            "required": [
                "category",
                "credit_card",
                "date",
                "description",
                "grant_id",
                "id",
                "purchases",
                "receipts",
                "user_id",
                "vendor"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "credit_card": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "grant_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "purchases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Purchase"
                    }
                },
                "receipts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                },
                "vendor": {
                    "$ref": "#/definitions/models.Vendor"
                }
            }
        },
        "models.EditMileageInput": {
            "type": "object",
            "required": [
                "category",
                "date",
                "destination",
                "end_odometer",
                "grant_id",
                "id",
                "parking",
                "start_odometer",
                "starting_location",
                "tolls",
                "trip_purpose",
                "user_id"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "date": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "end_odometer": {
                    "type": "integer"
                },
                "grant_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "parking": {
                    "type": "number"
                },
                "start_odometer": {
                    "type": "integer"
                },
                "starting_location": {
                    "type": "string"
                },
                "tolls": {
                    "type": "number"
                },
                "trip_purpose": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.EditPettyCash": {
            "type": "object",
            "required": [
                "amount",
                "category",
                "date",
                "description",
                "grant_id",
                "id",
                "receipts",
                "user_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "grant_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "receipts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.ErrorLog": {
            "type": "object",
            "required": [
                "error",
                "error_message",
                "error_path",
                "user_id"
            ],
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                },
                "error_path": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.FindCheckInput": {
            "type": "object",
            "required": [
                "check_id"
            ],
            "properties": {
                "check_id": {
                    "type": "string"
                }
            }
        },
        "models.FindMileageInput": {
            "type": "object",
            "required": [
                "mileage_id"
            ],
            "properties": {
                "mileage_id": {
                    "type": "string"
                }
            }
        },
        "models.FindPettyCashInput": {
            "type": "object",
            "required": [
                "petty_cash_id"
            ],
            "properties": {
                "petty_cash_id": {
                    "type": "string"
                }
            }
        },
        "models.Grant": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.IncompleteAction": {
            "type": "object",
            "properties": {
                "action_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "request_id": {
                    "type": "string"
                },
                "request_type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.MileageInput": {
            "type": "object",
            "required": [
                "category",
                "date",
                "destination",
                "end_odometer",
                "grant_id",
                "parking",
                "start_odometer",
                "starting_location",
                "tolls",
                "trip_purpose"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "date": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "end_odometer": {
                    "type": "integer"
                },
                "grant_id": {
                    "type": "string"
                },
                "parking": {
                    "type": "number"
                },
                "start_odometer": {
                    "type": "integer"
                },
                "starting_location": {
                    "type": "string"
                },
                "tolls": {
                    "type": "number"
                },
                "trip_purpose": {
                    "type": "string"
                }
            }
        },
        "models.Mileage_Overview": {
            "type": "object",
            "properties": {
                "current_status": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "reimbursement": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Mileage_Request": {
            "type": "object",
            "properties": {
                "action_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Action"
                    }
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "created_at": {
                    "type": "string"
                },
                "current_status": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "end_odometer": {
                    "type": "integer"
                },
                "grant_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_user_before_reject": {
                    "type": "string"
                },
                "parking": {
                    "type": "number"
                },
                "reimbursement": {
                    "type": "number"
                },
                "start_odometer": {
                    "type": "integer"
                },
                "starting_location": {
                    "type": "string"
                },
                "tolls": {
                    "type": "number"
                },
                "trip_mileage": {
                    "type": "integer"
                },
                "trip_purpose": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Month": {
            "type": "integer",
            "enum": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12
            ],
            "x-enum-varnames": [
                "January",
                "February",
                "March",
                "April",
                "May",
                "June",
                "July",
                "August",
                "September",
                "October",
                "November",
                "December"
            ]
        },
        "models.MonthlyRequestInput": {
            "type": "object",
            "required": [
                "month",
                "year"
            ],
            "properties": {
                "month": {
                    "$ref": "#/definitions/models.Month"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.PettyCashInput": {
            "type": "object",
            "required": [
                "amount",
                "category",
                "date",
                "description",
                "grant_id",
                "receipts"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "grant_id": {
                    "type": "string"
                },
                "receipts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Petty_Cash_Overview": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "current_status": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Petty_Cash_Request": {
            "type": "object",
            "properties": {
                "action_history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Action"
                    }
                },
                "amount": {
                    "type": "number"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "created_at": {
                    "type": "string"
                },
                "current_status": {
                    "type": "string"
                },
                "current_user": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "grant_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_user_before_reject": {
                    "type": "string"
                },
                "receipts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.PublicInfo": {
            "type": "object",
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "check_requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Check_Request_Overview"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "incomplete_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.IncompleteAction"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "string"
                },
                "mileage_requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mileage_Overview"
                    }
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "petty_cash_requests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Petty_Cash_Overview"
                    }
                },
                "vehicles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vehicle"
                    }
                }
            }
        },
        "models.Purchase": {
            "type": "object",
            "required": [
                "amount",
                "description",
                "grant_line_item"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "grant_line_item": {
                    "type": "string"
                }
            }
        },
        "models.UserLogin": {
            "type": "object",
            "required": [
                "email",
                "id",
                "name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Vehicle": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.VehicleInput": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Vendor": {
            "type": "object",
            "required": [
                "address_line_one",
                "name"
            ],
            "properties": {
                "address_line_one": {
                    "type": "string"
                },
                "address_line_two": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "responses.CheckRequestRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Check_Request"
                    }
                },
                "status": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                }
            }
        },
        "responses.MileageRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mileage_Request"
                    }
                },
                "status": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                }
            }
        },
        "responses.MyInfoRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.PublicInfo"
                },
                "status": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                }
            }
        },
        "responses.PettyCashRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Petty_Cash_Request"
                    }
                },
                "status": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                }
            }
        },
        "responses.VehicleRes": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/models.Vehicle"
                },
                "status": {
                    "type": "string"
                },
                "string": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Financial Request Handler API",
	Description:      "An API Endpoint for handling organizational financial reimbursement requests",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
